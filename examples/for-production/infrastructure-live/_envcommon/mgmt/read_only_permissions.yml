# We put this data in a YAML file, rather than directly in an HCL file, as YAML makes it easier for the Gruntwork
# Architecture Catalog tooling to parse the file and add additional data: e.g., if you add an additional service from
# the Architecture Catalog, the Architecture Catalog tooling may add a few extra parameters to this file that are used
# by the new service. It is completely safe for you to add or modify data in this file manually, as the Architecture
# Catalog tooling will only ever add/merge data. Alternatively, if you do not intend to use the Gruntwork Architecture
# Catalog in the future, you could move this data directly into an HCL file instead.

RDSReadOnlyAccess:
  effect: "Allow"
  actions:
  - "rds:Describe*"
  - "rds:List*"
  - "rds:Download*"
  resources:
  - "*"


ElasticacheReadOnlyAccess:
  effect: "Allow"
  actions:
  - "elasticache:Describe*"
  - "elasticache:List*"
  resources:
  - "*"


ACMReadOnlyAccess:
  effect: "Allow"
  actions:
  - "acm:DescribeCertificate"
  - "acm:ListCertificates"
  - "acm:GetCertificate"
  - "acm:ListTagsForCertificate"
  resources:
  - "*"
AutoScalingReadOnlyAccess:
  effect: "Allow"
  actions:
  - "autoscaling:Describe*"
  resources:
  - "*"
CloudTrailReadOnlyAccess:
  effect: "Allow"
  actions:
  - "cloudtrail:Describe*"
  - "cloudtrail:List*"
  - "cloudtrail:Get*"
  resources:
  - "*"
CloudWatchReadOnlyAccess:
  effect: "Allow"
  actions:
  - "cloudwatch:Describe*"
  - "cloudwatch:List*"
  resources:
  - "*"
CloudWatchLogsReadOnlyAccess:
  effect: "Allow"
  actions:
  - "logs:Get*"
  - "logs:Describe*"
  - "logs:List*"
  - "logs:Filter*"
  resources:
  - "*"
ConfigReadOnlyAccess:
  effect: "Allow"
  actions:
  - "config:Get*"
  - "config:Describe*"
  - "config:List*"
  - "config:Select*"
  - "config:BatchGetResourceConfig"
  resources:
  - "*"
EC2ServiceReadOnlyAccess:
  effect: "Allow"
  actions:
  - "ec2:Describe*"
  - "ec2:Get*"
  resources:
  - "*"
ECSReadOnlyAccess:
  effect: "Allow"
  actions:
  - "ecs:Describe*"
  - "ecs:List*"
  resources:
  - "*"
ECRReadOnlyAccess:
  effect: "Allow"
  actions:
  - "ecr:BatchGet*"
  - "ecr:Describe*"
  - "ecr:Get*"
  - "ecr:List*"
  resources:
  - "*"
ELBReadOnlyAccess:
  effect: "Allow"
  actions:
  - "elasticloadbalancing:Describe*"
  resources:
  - "*"
GuardDutyReadOnlyAccess:
  effect: "Allow"
  actions:
  - "guardduty:Get*"
  - "guardduty:List*"
  resources:
  - "*"
IAMReadOnlyAccess:
  effect: "Allow"
  actions:
  - "iam:Get*"
  - "iam:List*"
  - "iam:PassRole*"
  resources:
  - "*"
IAMAccessAnalyzerReadOnlyAccess:
  effect: "Allow"
  actions:
  - "access-analyzer:List*"
  - "access-analyzer:Get*"
  - "access-analyzer:ValidatePolicy"
  resources:
  - "*"
KMSReadOnlyAccess:
  effect: "Allow"
  actions:
  - "kms:Describe*"
  - "kms:Get*"
  - "kms:List*"
  resources:
  - "*"
LambdaReadOnlyAccess:
  effect: "Allow"
  actions:
  - "lambda:Get*"
  - "lambda:List*"
  resources:
  - "*"
Route53ReadOnlyAccess:
  effect: "Allow"
  actions:
  - "route53:Get*"
  - "route53:List*"
  - "route53:Test*"
  - "route53domains:Check*"
  - "route53domains:Get*"
  - "route53domains:List*"
  - "route53domains:View*"
  - "route53resolver:Get*"
  - "route53resolver:List*"
  resources:
  - "*"
S3ReadOnlyAccess:
  effect: "Allow"
  actions:
  - "s3:Get*"
  - "s3:List*"
  resources:
  - "*"
SecretsManagerReadOnlyAccess:
  effect: "Allow"
  actions:
  - "secretsmanager:Get*"
  - "secretsmanager:List*"
  - "secretsmanager:Describe*"
  resources:
  - "*"
SNSReadOnlyAccess:
  effect: "Allow"
  actions:
  - "sns:Get*"
  - "sns:List*"
  - "sns:Check*"
  resources:
  - "*"
SQSReadOnlyAccess:
  effect: "Allow"
  actions:
  - "sqs:Get*"
  - "sqs:List*"
  resources:
  - "*"


CloudWatchEventsReadOnlyAccess:
  effect: "Allow"
  actions:
  - "events:Describe*"
  - "events:List*"
  resources:
  - "*"


EKSReadOnlyAccess:
  effect: "Allow"
  actions:
  - "eks:List*"
  - "eks:Describe*"
  resources:
  - "*"


DLMReadOnlyAccess:
  effect: Allow
  actions:
  - "dlm:List*"
  resources:
  - "*"


DynamoDBLocksTableAccess:
  effect: "Allow"
  actions:
  - "dynamodb:*"
  resources:
  - "arn:aws:dynamodb:*:*:table/terraform-locks"

S3StateBucketAccess:
  effect: "Allow"
  actions:
  - "s3:*"
  resources:
  - "arn:aws:s3:::${state_bucket}"
  - "arn:aws:s3:::${state_bucket}/*"

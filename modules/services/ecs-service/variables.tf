# ---------------------------------------------------------------------------------------------------------------------
# REQUIRED PARAMETERS
# These variables must be passed in by the calling Terraform code.
# ---------------------------------------------------------------------------------------------------------------------

variable "service_name" {
  description = "The name of the ECS service (e.g. my-service-stage)"
  type        = string
}

variable "ecs_node_port_mappings" {
  description = "A map of ports used by the Docker containers on an ECS Node. The key should be the container port and the value should be what host port to map it to."
  type        = map(number)
}

variable "ecs_cluster_arn" {
  description = "The ARN of the cluster to which the ecs service should be deployed"
  type        = string
}

variable "kms_master_key_arn" {
  description = "The ARN of the master KMS key"
  type        = string
}

variable "container_definitions" {
  description = "Map of names to container definitions to use for the ECS task. Each entry corresponds to a different ECS container definition. The key corresponds to a user defined name for the container definition"
  type        = any
}
# ---------------------------------------------------------------------------------------------------------------------
# OPTIONAL PARAMETERS
# These values may optionally be overwritten by the calling Terraform code.
# ---------------------------------------------------------------------------------------------------------------------
variable "alarm_sns_topic_arns" {
  description = "A list of ARNs of the SNS topic(s) to write alarm events to"
  type        = list(string)
  default     = []
}

variable "desired_number_of_tasks" {
  description = "How many instances of the ECS Service to run across the ECS cluster"
  type        = number
  default     = 1
}

variable "canary_container_definitions" {
  description = "Map of names to container definitions to use for the canary ECS task. Each entry corresponds to a different ECS container definition. The key corresponds to a user defined name for the container definition"
  type        = any
  default     = {}
}

# ---------------------------------------------------------------------------------------------------------------------
# SECURITY PARAMETERS
# These values may optionally be overwritten by the calling Terraform code.
# ---------------------------------------------------------------------------------------------------------------------

variable "expose_ecs_service_to_other_ecs_nodes" {
  description = "Set this to true to allow the ecs service to be accessed by other ecs nodes"
  type        = bool
  default     = false
}

variable "secrets_manager_kms_key_arn" {
  description = "The ARN of the kms key associated with secrets manager"
  type        = string
  default     = null
}

variable "ecs_instance_security_group_id" {
  description = "The ID of the security group that should be applied to ecs service instances"
  type        = string
  default     = null
}

# ---------------------------------------------------------------------------------------------------------------------
# CLOUDWATCH ALARMS & MONITORING PARAMETERS
# These values may optionally be overwritten by the calling Terraform code.
# ---------------------------------------------------------------------------------------------------------------------
variable "enable_cloudwatch_alarms" {
  description = "Set to true to enable Cloudwatch alarms on the ecs service instances"
  type        = bool
  default     = false
}

variable "cloudwatch_log_group_name" {
  description = "The name for the Cloudwatch logs that will be generated by the ecs service"
  type        = string
  default     = null
}



variable "high_cpu_utilization_threshold" {
  description = "Trigger an alarm if the ECS Service has a CPU utilization percentage above this threshold"
  type        = number
  default     = 90
}

variable "high_cpu_utilization_period" {
  description = "The period, in seconds, over which to measure the CPU utilization percentage"
  type        = number
  default     = 300
}

variable "high_memory_utilization_threshold" {
  description = "Trigger an alarm if the ECS Service has a memory utilization percentage above this threshold"
  type        = number
  default     = 90
}

variable "high_memory_utilization_period" {
  description = "The period, in seconds, over which to measure the memory utilization percentage"
  type        = number
  default     = 300
}

variable "desired_number_of_canary_tasks" {
  description = "How many instances of the ECS Service to run across the ECS cluster for a canary deployment. Typically, only 0 or 1 should be used."
  type        = number
  default     = 0
}

variable "min_number_of_tasks" {
  description = "The minimum number of instances of the ECS Service to run. Auto scaling will never scale in below this number."
  type        = number
  default     = 1
}

variable "max_number_of_tasks" {
  description = "The maximum number of instances of the ECS Service to run. Auto scaling will never scale out above this number."
  type        = number
  default     = 3
}

variable "canary_version" {
  description = "Which version of the ECS Service Docker container to deploy as a canary (e.g. 0.57)"
  type        = string
  default     = null
}

variable "cpu" {
  description = "The number of CPU units to allocate to the ECS Service."
  type        = number
  default     = 1
}

variable "memory" {
  description = "How much memory, in MB, to give the ECS Service."
  type        = number
  default     = 500
}

variable "use_custom_docker_run_command" {
  description = "Set this to true if you want to pass a custom docker run command. If you set this to true, you must supply var.custom_docker_command"
  type        = bool
  default     = false
}

variable "custom_docker_command" {
  description = "If var.use_custom_docker_run_command is set to true, set this variable to the custom docker run command you want to provide"
  type        = string
  default     = null
}

variable "use_auto_scaling" {
  description = "Whether or not to enable auto scaling for the ecs service"
  type        = bool
  default     = true
}

variable "desired_number_of_canary_tasks_to_run" {
  description = "The number of tasks that should use the canary image and tag"
  type        = number
  default     = 0
}

variable "ecs_cluster_name" {
  description = "The name of the ecs cluster to deploy the ecs service onto"
  type        = string
  default     = null
}

variable "deployment_maximum_percent" {
  description = "The upper limit, as a percentage of var.desired_number_of_tasks, of the number of running tasks that can be running in a service during a deployment. Setting this to more than 100 means that during deployment, ECS will deploy new instances of a Task before undeploying the old ones."
  type        = number
  default     = 200
}

variable "deployment_minimum_healthy_percent" {
  description = "The lower limit, as a percentage of var.desired_number_of_tasks, of the number of running tasks that must remain running and healthy in a service during a deployment. Setting this to less than 100 means that during deployment, ECS may undeploy old instances of a Task before deploying new ones."
  type        = number
  default     = 100
}

variable "force_destroy" {
  description = "A boolean that indicates whether the access logs bucket should be destroyed, even if there are files in it, when you run Terraform destroy. Unless you are using this bucket only for test purposes, you'll want to leave this variable set to false."
  type        = bool
  default     = false
}


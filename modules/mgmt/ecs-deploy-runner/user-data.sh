#!/bin/bash
#
# A script run in User Data of the EC2 workers for ECS deploy runner during boot.
#
# Note that this script expects to be running in an AMI generated by the Packer template ecs-deploy-runner-worker-al2.json.

set -e

# Send the log output from this script to user-data.log, syslog, and the console
# From: https://alestic.com/2010/12/ec2-user-data-output/
exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1


# Include common functions
source /etc/user-data/user-data-common.sh

# Disable SSH grunt. Note that we prepend these vars with "hardcoded" so that there are no namespace collisions with
# vars in /etc/user-data/user-data-common.sh.
readonly hardcoded_enable_ssh_grunt="false"
readonly hardcoded_ssh_grunt_iam_group=""
readonly hardcoded_ssh_grunt_iam_group_sudo=""
readonly hardcoded_external_account_ssh_grunt_role_arn=""

readonly users_for_ip_lockdown=(%{ for user in ip_lockdown_users }"${user}" %{ endfor })
start_ec2_baseline \
  "${enable_cloudwatch_log_aggregation}" \
  "$hardcoded_enable_ssh_grunt" \
  "${enable_fail2ban}" \
  "${enable_ip_lockdown}" \
  "$hardcoded_ssh_grunt_iam_group" \
  "$hardcoded_ssh_grunt_iam_group_sudo" \
  "${log_group_name}" \
  "$hardcoded_external_account_ssh_grunt_role_arn" \
  "$${users_for_ip_lockdown[@]}"  # Need a double dollar-sign here to avoid Terraform interpolation

configure-ecs-instance \
  --ecs-cluster-name ${ecs_cluster_name} \
  --ecr-aws-region ${aws_region} \
  --docker-auth-type ecr
